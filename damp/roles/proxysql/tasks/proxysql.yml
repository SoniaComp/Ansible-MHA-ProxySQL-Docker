---
- include_vars: servers.yml

- apt: >
    deb=https://github.com/sysown/proxysql/releases/download/v1.2.2/proxysql_1.2.2-ubuntu14_amd64.deb

- file: >
    path="/etc/proxysql.cnf"
    state=absent
- template: >
    src=proxysql.conf.tmpl
    dest=/etc/proxysql.cnf

- service: >
    name=proxysql
    state=running
#put sleep here!!!
- wait_for: seconds=5 

#- name: workaround for bug https://github.com/sysown/proxysql/issues/617 
#  command: >
#    mysql 
#    --user={{ proxysql.admin_user }}
#    --password={{ proxysql.admin_passwd }}
#    --host={{ proxysql.admin_host }}  
#    --port={{ proxysql.admin_port }}  
#    --execute "LOAD MYSQL USERS FROM CONFIG;LOAD MYSQL SERVERS FROM CONFIG;LOAD MYSQL QUERY RULES FROM CONFIG;LOAD MYSQL VARIABLES FROM CONFIG;LOAD MYSQL USERS TO RUNTIME;LOAD MYSQL SERVERS TO RUNTIME; LOAD MYSQL QUERY RULES TO RUNTIME; LOAD MYSQL VARIABLES TO RUNTIME; "

#- name: workaround for bug https://github.com/sysown/proxysql/issues/617 
#  command: >
 #   mysql 
#    --user={{ proxysql.admin_user }}
#    --password={{ proxysql.admin_passwd }}
#    --host={{ proxysql.admin_host }}  
#    --port={{ proxysql.admin_port }}  
#    --execute "set admin-mysql_ifaces='0.0.0.0:6032;/tmp/proxysql_admin.sock'; LOAD ADMIN VARIABLES TO RUNTIME;"

#create app user on the mysql master
- mysql_user: >
    login_host={{ item.1 }}
    login_user={{ mysql.login_user }} 
    login_password={{ mysql.login_passwd }}
    name={{ proxysql.app_user }}
    password={{ proxysql.app_passwd }}  
    priv={{ proxysql.app_priv }}
    host={{ proxysql.app_host }}
    state=present
  with_subelements:
    - "{{ mysql_servers }}"
    - master
  tags: debug

#create monitor user on the mysql master
- mysql_user: >
    login_host={{ item.1 }}
    login_user={{ mysql.login_user }} 
    login_password={{ mysql.login_passwd }}
    name={{ proxysql.monitor_user }}
    password={{ proxysql.monitor_passwd }}  
    priv={{ proxysql.monitor_priv }}
    host={{ proxysql.monitor_host }}
    state=present
  with_subelements:
    - "{{ mysql_servers }}"
    - master
  tags: debug

- name: create MySQL app user in ProxySQL
  command: >
    mysql 
    --user={{ proxysql.admin_user }}
    --password={{ proxysql.admin_passwd }}
    --host={{ proxysql.admin_host }}  
    --port={{ proxysql.admin_port }}  
    --execute "
    REPLACE INTO 
        mysql_users (username, password, active, default_hostgroup, max_connections) 
    VALUES 
        ('{{ proxysql.app_user }}', '{{ proxysql.app_passwd }}', 1, 1, {{ proxysql.app_max_conn }});"
  notify:
    - load proxysql changes to runtime
    - save proxysql changes to disk

- name: create initial mysql_replication_hostgroups 
  command: >
    mysql 
    --user={{ proxysql.admin_user }}
    --password={{ proxysql.admin_passwd }}
    --host={{ proxysql.admin_host }}  
    --port={{ proxysql.admin_port }}  
    --execute "
    REPLACE INTO mysql_replication_hostgroups 
        ( writer_hostgroup, reader_hostgroup )
    VALUES 
        (1,2),(3,4),(5,6),(7,8),(8,9),(10,11);"
  notify:   
    - load proxysql changes to runtime
    - save proxysql changes to disk
  tags: debug3

- name: add servers to proxysql and load them
  command: >
    mysql 
    --user={{ proxysql.admin_user }}
    --password={{ proxysql.admin_passwd }}
    --host={{ proxysql.admin_host }}  
    --port={{ proxysql.admin_port }}  
    --execute "
    REPLACE INTO mysql_servers 
        ( hostgroup_id, hostname, port, max_replication_lag) 
    VALUES 
        ({{ item.0.hostgroup }}, '{{ item.1 }}', 3306, 20);"
  with_subelements:
    - "{{ mysql_servers }}"
    - servers
  notify:   
    - load proxysql changes to runtime
    - save proxysql changes to disk
  tags: debug


- debug: var=mysql_servers
  tags: debug
